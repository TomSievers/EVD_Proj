@startuml

package Visualizer
{
    class CueBall <<struct>>
    {
        + centerPoint : cv::Point
        + radius : double
        + thickness : int
        + CueBall(center : cv::Point)
    }

    class Trajectories <<struct>>
    {
        + cueBallTrajectory : vector<cv::Point>
        + otherBallTrajectories : vector<vector<cv::Point>>
    }

    interface IVisual
    {
        + update(ball : CueBall, trajectories : Trajectories)
    }

    class ObjectVisualizer
    {
        - coordTrans (point : cv::Point) : cv::Point 
    }
}

package ImageDrawer
{
    interface IImageDrawer
    {
        + setDrawColor(color : ColorRGBAInt) : void
        + setDrawColor(color : ColorRGBInt) : void
        + setBackground(color : ColorRGBInt) : void
        + drawCircle(center : cv::Point, radius : double, thickness : int) : void
        + drawLine(pointA : cv::Point, pointB : cv::Point, thickness : int) : void
    }
}

CueBall "1" <-- IVisual : prevBall
Trajectories "1" <-- IVisual : prevTrajectory

IVisual <|.. ObjectVisualizer

IVisual -> "1" IImageDrawer : drawer

@enduml