@startuml

package ImageCapture
{
    interface ICapture
    {
        # curFrame : cv::Mat
        # active : bool
        # thread : std::thread
        # updateMutex : std::mutex
        + //setRoi(roi : const cv::Point2f[4], width : float, height : float) : void//
        + //getFrame() : cv::Mat//
        + //stop() : void//
        # //update() : void//
    }
}

package Detector {
    class Object <<struct>> {

    }

    note "percentageWhite, ballContourPoints and whiteContourPoints are variables which should only\nbe used by the IImageProcessing interface" as BallObjectNode

    class BallObject <<struct>> {
        + percentageWhite : uint8_t
        + ballContourPoints : std::vector<cv::Point>
        + whiteContourPoints : std::vector<cv::Point>
        + point : cv::Point
        + radius : float
        + ballType : BallType
    }

    enum BallType {
        CUE_BALL
        NOT_CUE_BALL
    }

    enum VisionStep {
        ACQUISITION,
        ENHANCEMENT,
        SEGMENTATION,
        FEATURE_EXTRACT,
        CLASSIFICATION
    }

    interface IDetector {
        + //getObjects() : std::vector<std::shared_ptr<Object>>//
        - processors : std::map<VisionStep, std::shared_ptr<IImageProcessing>> 
    }

    class BallDetector {

    }

    note "The processors map contains variables with the following types:\nBallAcquisition,\nBallEnhancement,\nBallSegmentation,\nBallFeatureExtraction,\nBallClassification" as BallDetectorNode

    interface IImageProcessing {
        + //process(image : cv::Mat&, data : std::shared_ptr<void>) : cv::Mat//
    }

    class Acquisition {
        + Acquisition(deviceID : int)
        + Acquisition(mock_img : const std::string&)
        + getCapture() : ImageCapture::ICapture&
        - cap : std::unique_ptr<ImageCapture::ICapture>
    }

    class BallEnhancement {
        - blurImage(image : const cv::Mat&) : cv::Mat
    }

    class BallSegmentation {
        - findCircles(image : const cv::Mat&) : std::vector<cv::Vec3f>
        - removeBackground(image : const cv::Mat&) : cv::Mat
    }

    class BallFeatureExtraction {
        + setEnhancementImage(img : const cv::Mat&)
        - determineWhitePercentage(image : const cv::Mat&, ballObjects : std::vector<std::shared_ptr<BallObject>>) : void
        - enhancementImg : std::shared_ptr<cv::Mat>
    }

    class BallClassification {
        - classifyBalls(ballObjects : std::vector<std::shared_ptr<BallObject>>&) : void
    }
}



IDetector <|.. BallDetector
IDetector .> Object
Object <|.. BallObject
BallObject --> BallType
Acquisition ..> ICapture
IImageProcessing <|.. Acquisition
IImageProcessing <|.. BallEnhancement
IImageProcessing <|.. BallSegmentation
IImageProcessing <|.. BallFeatureExtraction
IImageProcessing <|.. BallClassification
IImageProcessing .> BallObject
IImageProcessing .> VisionStep
BallDetector --> IImageProcessing
BallDetector - BallDetectorNode
BallObject - BallObjectNode
BallType <. BallClassification

@enduml